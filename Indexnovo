<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Mapa Ambiental - Mineiros</title>

  <!-- Leaflet e Chart.js -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <style>
    :root{
      --verde:#2e7d32; --claro:#f0f5f3; --card:#ffffff;
    }
    *{box-sizing:border-box}
    body{
      margin:0;
      font-family:Inter, system-ui, -apple-system, "Segoe UI", Roboto, Arial;
      background:var(--claro);
      color:#1b2620;
    }

    /* topo / nav */
    header{
      display:flex;
      align-items:center;
      justify-content:space-between;
      gap:10px;
      padding:12px 18px;
      background:linear-gradient(90deg, rgba(46,125,50,0.95), rgba(76,175,80,0.95));
      color:#fff;
    }
    .nav-buttons{display:flex; gap:8px; align-items:center;}
    .nav-buttons button{
      background:transparent; border:1px solid rgba(255,255,255,0.2); color:#fff;
      padding:8px 12px; border-radius:10px; cursor:pointer;
    }
    .nav-buttons button.ativo{ background:rgba(255,255,255,0.12); }

    main{padding:18px;}

    /* telas */
    .tela{display:none;}
    .tela.ativa{display:block;}

    /* formul√°rios e controles */
    .card{
      background:var(--card); padding:14px; border-radius:12px; box-shadow:0 6px 18px rgba(0,0,0,0.08);
      margin-bottom:14px;
    }

    /* mapa */
    #map{height:520px; border-radius:10px; overflow:hidden;}

    /* controles do mapa */
    #controls{display:flex; gap:10px; align-items:center; flex-wrap:wrap;}
    select,input[type="text"],button{padding:10px;border-radius:10px;border:1px solid #d0d0d0}

    /* layout info */
    .row{display:flex; gap:12px; align-items:flex-start; flex-wrap:wrap;}
    .col{flex:1; min-width:260px;}
    .small{flex:0 0 200px;}

    ul.pontos-list{list-style:none;padding:0;margin:0}
    ul.pontos-list li{padding:6px 8px;border-bottom:1px solid #eee;font-size:14px}

    .logout{background:#e53935;color:#fff;border:none;padding:8px 12px;border-radius:10px;cursor:pointer;}
    .user-badge{background:rgba(255,255,255,0.15);padding:6px 10px;border-radius:10px;color:#fff}

    @media (max-width:820px){
      #map{height:400px}
    }
  </style>
</head>
<body>
  <header>
    <div style="display:flex;gap:12px;align-items:center">
      <div style="font-weight:700">üå± Mapa Ambiental</div>
      <div style="opacity:0.9;font-size:13px">Mineiros (prot√≥tipo)</div>
    </div>

    <div class="nav-buttons">
      <button id="btnMapa" class="ativo">Mapa</button>
      <button id="btnInfo">Informa√ß√µes</button>
      <div id="userArea" style="display:flex;align-items:center;gap:8px;margin-left:10px">
        <div id="userBadge" class="user-badge" style="display:none"></div>
        <button id="btnLoginTop">Entrar / Criar</button>
      </div>
    </div>
  </header>

  <main>
    <!-- TELA: LOGIN / CRIAR -->
    <div id="telaLogin" class="tela">
      <div class="card" style="max-width:420px;margin:12px auto;">
        <h3>Entrar</h3>
        <input id="loginEmail" type="text" placeholder="E-mail" style="width:100%;margin-top:8px" />
        <input id="loginSenha" type="password" placeholder="Senha" style="width:100%;margin-top:8px" />
        <div style="display:flex;gap:8px;margin-top:10px;justify-content:space-between;align-items:center">
          <button onclick="fazerLogin()">Entrar</button>
          <a href="#" onclick="mostrarTela('telaCriar'); return false;">Criar conta</a>
        </div>
      </div>

      <div class="card" style="max-width:420px;margin:12px auto;">
        <h3>Criar conta</h3>
        <input id="novoNome" type="text" placeholder="Nome completo" style="width:100%;margin-top:8px" />
        <input id="novoEmail" type="text" placeholder="E-mail" style="width:100%;margin-top:8px" />
        <input id="novaSenha" type="password" placeholder="Senha" style="width:100%;margin-top:8px" />
        <div style="display:flex;gap:8px;margin-top:10px;justify-content:space-between;align-items:center">
          <button onclick="criarConta()">Cadastrar</button>
          <a href="#" onclick="mostrarTela('telaLogin'); return false;">J√° tenho conta</a>
        </div>
      </div>
    </div>

    <!-- TELA: MAPA -->
    <div id="telaMapa" class="tela ativa">
      <div class="card">
        <div style="display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap">
          <div id="controls" style="align-items:center">
            <select id="tipoPonto">
              <option value="Nascente">üíß Nascente</option>
              <option value="Esp√©cie">üåø Esp√©cie</option>
              <option value="Queimada">üî• Queimada</option>
              <option value="Outros">üìç Outros</option>
            </select>

            <input id="descricao" type="text" placeholder="Descri√ß√£o (opcional)" style="min-width:260px" />

            <button id="salvarPonto">Salvar Ponto</button>
            <button id="limparTudo" style="background:#f44336;color:#fff">Limpar tudo</button>
          </div>

          <div style="display:flex;gap:8px;align-items:center;margin-top:8px">
            <button id="btnLocalizar">Localizar-me</button>
            <button id="btnMeusPontos">Meus pontos</button>
            <button class="logout" id="btnSair" style="display:none">Sair</button>
          </div>
        </div>
      </div>

      <div id="map" class="card"></div>

      <div class="row">
        <div class="col card">
          <h4>Legenda</h4>
          <p>üü¢ Nascente ‚Ä¢ üü° Esp√©cie ‚Ä¢ üî¥ Queimada ‚Ä¢ üîµ Outros</p>
          <div style="margin-top:10px;font-size:13px;color:#444">
            Clique no mapa para marcar um local. Em seguida clique em <b>Salvar Ponto</b>.
          </div>
        </div>

        <div class="small card">
          <h4>Estat√≠sticas R√°pidas</h4>
          <div id="estatisticasRapidas">
            <!-- preenchido por JS -->
          </div>
        </div>
      </div>
    </div>

    <!-- TELA: INFORMA√á√ïES -->
    <div id="telaInfo" class="tela">
      <div class="card" style="display:flex;gap:12px;flex-wrap:wrap;align-items:center">
        <div style="flex:1;min-width:260px">
          <input id="searchCidade" type="text" placeholder="Digite o nome da cidade (ex: Mineiros)" style="width:100%" />
        </div>
        <div>
          <button id="buscarCidade">Pesquisar</button>
          <button id="buscarCidadeMapa" title="Pesquisar cidade com base nos pontos">Pesquisar cidades existentes</button>
        </div>
      </div>

      <div class="row">
        <div class="col card">
          <h4 id="tituloCidade">Resultados</h4>
          <div id="resumoCidade">
            <!-- N√∫meros e porcentagens -->
          </div>
        </div>

        <div class="col card">
          <h4>Gr√°ficos</h4>
          <canvas id="graficoPizzaCidade" style="max-height:280px"></canvas>
          <canvas id="graficoBarCidade" style="max-height:280px;margin-top:12px"></canvas>
        </div>
      </div>

      <div class="card">
        <h4>Lista de pontos na cidade</h4>
        <ul class="pontos-list" id="listaPontosCidade"></ul>
      </div>
    </div>

  </main>

  <script>
    /* ----------------------------
       Dados locais: usuarios / pontos
       ---------------------------- */
    let usuarios = JSON.parse(localStorage.getItem('usuarios')) || [];
    let usuarioAtual = JSON.parse(localStorage.getItem('usuarioAtual')) || null;
    let pontos = JSON.parse(localStorage.getItem('pontos')) || []; // cada ponto: {lat,lng,tipo,usuario,descricao,cidade,createdAt}

    // UI top
    const btnMapa = document.getElementById('btnMapa');
    const btnInfo = document.getElementById('btnInfo');
    const telas = { mapa: document.getElementById('telaMapa'), info: document.getElementById('telaInfo'), login: document.getElementById('telaLogin') };
    const btnLoginTop = document.getElementById('btnLoginTop');
    const userBadge = document.getElementById('userBadge');
    const btnSair = document.getElementById('btnSair');

    function atualizarUserUI(){
      if(usuarioAtual){
        userBadge.style.display='inline-block';
        userBadge.textContent = usuarioAtual.nome;
        btnLoginTop.style.display='none';
        btnSair.style.display='inline-block';
      } else {
        userBadge.style.display='none';
        btnLoginTop.style.display='inline-block';
        btnSair.style.display='none';
      }
    }
    atualizarUserUI();

    btnMapa.onclick = ()=> mostrarTela('telaMapa');
    btnInfo.onclick = ()=> mostrarTela('telaInfo');
    btnLoginTop.onclick = ()=> mostrarTela('telaLogin');
    btnSair.onclick = ()=> { localStorage.removeItem('usuarioAtual'); usuarioAtual=null; atualizarUserUI(); mostrarTela('telaLogin'); location.reload(); }

    function mostrarTela(id){
      document.querySelectorAll('.tela').forEach(t=>t.classList.remove('ativa'));
      document.getElementById(id).classList.add('ativa');
      // ajustar bot√£o ativo
      btnMapa.classList.toggle('ativo', id==='telaMapa');
      btnInfo.classList.toggle('ativo', id==='telaInfo');
      if(id==='telaMapa' && map) setTimeout(()=> map.invalidateSize(),300);
    }

    /* ----------------------------
       Conta: criar / login
       ---------------------------- */
    function criarConta(){
      const nome = document.getElementById('novoNome').value.trim();
      const email = document.getElementById('novoEmail').value.trim();
      const senha = document.getElementById('novaSenha').value;
      if(!nome || !email || !senha) return alert('Preencha todos os campos.');
      if(usuarios.some(u=>u.email===email)) return alert('E-mail j√° cadastrado.');
      usuarios.push({nome,email,senha});
      localStorage.setItem('usuarios', JSON.stringify(usuarios));
      alert('Conta criada. Fa√ßa login.');
      mostrarTela('telaLogin');
    }
    function fazerLogin(){
      const email = document.getElementById('loginEmail').value.trim();
      const senha = document.getElementById('loginSenha').value;
      const u = usuarios.find(x=>x.email===email && x.senha===senha);
      if(!u) return alert('Usu√°rio ou senha incorretos.');
      usuarioAtual = u;
      localStorage.setItem('usuarioAtual', JSON.stringify(usuarioAtual));
      atualizarUserUI();
      mostrarTela('telaMapa');
      if(!map) inicializarMapa();
    }

    /* ----------------------------
       Map / Leaflet
       ---------------------------- */
    let map=null;
    let ultimoClick = null;

    function inicializarMapa(){
      // view centrada em Mineiros (GO)
      map = L.map('map').setView([-17.57, -52.55], 10);

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '¬© OpenStreetMap contributors'
      }).addTo(map);

      exibirPontosNoMapa();

      map.on('click', (e)=>{
        ultimoClick = e.latlng;
        alert('Clique em "Salvar Ponto" para registrar essa localiza√ß√£o.');
      });

      // buttons
      document.getElementById('salvarPonto').onclick = onSalvarPontoClicked;
      document.getElementById('limparTudo').onclick = onLimparTudo;
      document.getElementById('btnLocalizar').onclick = onLocalizar;
      document.getElementById('btnMeusPontos').onclick = onMeusPontos;
      atualizarEstatisticasRapidas();
    }

    function corPorTipo(t){
      if(t==='Nascente') return '#2e7d32'; // verde
      if(t==='Esp√©cie') return '#f4c542'; // amarelo
      if(t==='Queimada') return '#e53935'; // vermelho
      return '#3f51b5'; // outros azul
    }

    function exibirPontosNoMapa(){
      if(!map) return;
      // limpar camadas antigas (remontar mapa simples)
      map.eachLayer(layer=>{
        if(layer instanceof L.TileLayer) return;
        map.removeLayer(layer);
      });
      // re-adicionar tilelayer in case it was removed
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

      pontos.forEach(p=>{
        const c = corPorTipo(p.tipo);
        L.circleMarker([p.lat,p.lng], {radius:8, color:c, fillColor:c, fillOpacity:0.95})
          .addTo(map)
          .bindPopup(`<b>${p.tipo}</b><br>${p.descricao?p.descricao+'<br>':''}Cidade: ${p.cidade||'Desconhecida'}<br>Por: ${p.usuario}`);
      });
    }

    async function onSalvarPontoClicked(){
      if(!usuarioAtual) return alert('Fa√ßa login para salvar pontos.');
      if(!ultimoClick) return alert('Clique no mapa primeiro.');
      const tipo = document.getElementById('tipoPonto').value;
      const descricao = document.getElementById('descricao').value.trim();
      const lat = ultimoClick.lat;
      const lng = ultimoClick.lng;

      // tenta reverse geocoding para obter cidade (Nominatim)
      let cidade = 'Desconhecida';
      try{
        const url = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lng}`;
        const res = await fetch(url, { headers: { 'Accept': 'application/json' }});
        if(res.ok){
          const data = await res.json();
          const addr = data.address || {};
          cidade = addr.city || addr.town || addr.village || addr.county || addr.state || 'Desconhecida';
        }
      }catch(err){
        // falhou: mant√©m 'Desconhecida'
      }

      const ponto = {
        lat, lng, tipo, usuario: usuarioAtual.nome, descricao, cidade, createdAt: new Date().toISOString()
      };
      pontos.push(ponto);
      localStorage.setItem('pontos', JSON.stringify(pontos));
      ultimoClick = null;
      exibirPontosNoMapa();
      atualizarEstatisticasRapidas();
      alert('Ponto salvo: ' + tipo + ' ‚Äî cidade: ' + cidade);
    }

    function onLimparTudo(){
      if(!confirm('Apagar todos os pontos?')) return;
      pontos = [];
      localStorage.removeItem('pontos');
      exibirPontosNoMapa();
      atualizarEstatisticasRapidas();
    }

    function onLocalizar(){
      if(!navigator.geolocation) return alert('Geolocaliza√ß√£o n√£o dispon√≠vel no navegador.');
      navigator.geolocation.getCurrentPosition(pos=>{
        const lat = pos.coords.latitude, lng = pos.coords.longitude;
        map.setView([lat,lng], 13);
      }, err=>{
        alert('N√£o foi poss√≠vel localizar: ' + err.message);
      });
    }

    function onMeusPontos(){
      if(!usuarioAtual) return alert('Fa√ßa login.');
      const meus = pontos.filter(p=>p.usuario===usuarioAtual.nome);
      if(meus.length===0) return alert('Voc√™ ainda n√£o marcou pontos.');
      // centraliza no primeiro ponto do usu√°rio
      map.setView([meus[0].lat, meus[0].lng], 12);
    }

    /* ----------------------------
       Estat√≠sticas r√°pidas (no mapa)
       ---------------------------- */
    function atualizarEstatisticasRapidas(){
      const total = pontos.length;
      const cont = {Nascente:0, Esp√©cie:0, Queimada:0, Outros:0};
      pontos.forEach(p=>{
        if(p.tipo==='Nascente') cont.Nascente++;
        else if(p.tipo==='Esp√©cie') cont.Esp√©cie++;
        else if(p.tipo==='Queimada') cont.Queimada++;
        else cont.Outros++;
      });
      const html = `
        <div><b>Total pontos:</b> ${total}</div>
        <div>üü¢ Nascentes: ${cont.Nascente}</div>
        <div>üü° Esp√©cies: ${cont.Esp√©cie}</div>
        <div>üî¥ Queimadas: ${cont.Queimada}</div>
        <div>üîµ Outros: ${cont.Outros}</div>
      `;
      document.getElementById('estatisticasRapidas').innerHTML = html;
    }

    /* ----------------------------
       INFORMA√á√ïES: pesquisar cidade
       ---------------------------- */
    const buscarBtn = document.getElementById('buscarCidade');
    const buscarMapaBtn = document.getElementById('buscarCidadeMapa');
    let graficoPizzaCidade = null;
    let graficoBarCidade = null;

    buscarBtn.onclick = ()=> mostrarInfoCidade(document.getElementById('searchCidade').value.trim());
    buscarMapaBtn.onclick = ()=> {
      // mostra cidades existentes em pontos para o usu√°rio escolher: simples prompt
      const cidades = Array.from(new Set(pontos.map(p=>p.cidade || 'Desconhecida'))).filter(Boolean);
      if(cidades.length===0) return alert('Ainda n√£o h√° pontos cadastrados.');
      const escolha = prompt('Cidades encontradas:\n' + cidades.join('\n') + '\n\nDigite a cidade para ver dados:');
      if(!escolha) return;
      document.getElementById('searchCidade').value = escolha;
      mostrarInfoCidade(escolha);
    };

    function mostrarInfoCidade(nomeCidade){
      if(!nomeCidade) return alert('Digite o nome da cidade.');
      const nomeLower = nomeCidade.toLowerCase();
      const encontrados = pontos.filter(p => (p.cidade || '').toLowerCase() === nomeLower);
      document.getElementById('tituloCidade').textContent = `Resultados para: ${nomeCidade} (${encontrados.length} pontos)`;

      // contagens
      const cont = {Nascente:0, Esp√©cie:0, Queimada:0, Outros:0};
      encontrados.forEach(p=>{
        if(p.tipo==='Nascente') cont.Nascente++;
        else if(p.tipo==='Esp√©cie') cont.Esp√©cie++;
        else if(p.tipo==='Queimada') cont.Queimada++;
        else cont.Outros++;
      });
      const total = encontrados.length || 0;
      const pct = t => total===0 ? '0%' : Math.round((t/total)*100) + '%';

      // resumo num√©rico
      const resumo = `
        <div><b>Total de pontos na cidade:</b> ${total}</div>
        <div>üü¢ Nascentes: ${cont.Nascente} (${pct(cont.Nascente)})</div>
        <div>üü° Esp√©cies: ${cont.Esp√©cie} (${pct(cont.Esp√©cie)})</div>
        <div>üî¥ Queimadas: ${cont.Queimada} (${pct(cont.Queimada)})</div>
        <div>üîµ Outros: ${cont.Outros} (${pct(cont.Outros)})</div>
      `;
      document.getElementById('resumoCidade').innerHTML = resumo;

      // lista de pontos
      const listEl = document.getElementById('listaPontosCidade');
      listEl.innerHTML = '';
      encontrados.forEach(p=>{
        const li = document.createElement('li');
        li.innerHTML = `<b>${p.tipo}</b> ‚Äî ${p.descricao?p.descricao+' ‚Äî ':''}Por: ${p.usuario} ‚Äî (${p.lat.toFixed(4)}, ${p.lng.toFixed(4)})`;
        listEl.appendChild(li);
      });

      // gr√°ficos
      const ctxP = document.getElementById('graficoPizzaCidade').getContext('2d');
      if(graficoPizzaCidade) graficoPizzaCidade.destroy();
      graficoPizzaCidade = new Chart(ctxP, {
        type:'pie',
        data:{
          labels:['Nascentes','Esp√©cies','Queimadas','Outros'],
          datasets:[{
            data:[cont.Nascente, cont.Esp√©cie, cont.Queimada, cont.Outros],
            backgroundColor:['#2e7d32','#f4c542','#e53935','#3f51b5']
          }]
        }
      });

      const ctxB = document.getElementById('graficoBarCidade').getContext('2d');
      if(graficoBarCidade) graficoBarCidade.destroy();
      graficoBarCidade = new Chart(ctxB, {
        type:'bar',
        data:{
          labels:['Nascentes','Esp√©cies','Queimadas','Outros'],
          datasets:[{
            label:'Quantidade',
            data:[cont.Nascente,cont.Esp√©cie,cont.Queimada,cont.Outros]
          }]
        },
        options:{
          scales:{ y:{ beginAtZero:true, ticks:{ precision:0 } } }
        }
      });
    }

    /* ----------------------------
       Iniciar: se j√° tiver usu√°rio, abrir mapa
       ---------------------------- */
    if(usuarioAtual){
      mostrarTela('telaMapa');
      atualizarUserUI();
      if(!map) inicializarMapa();
    } else {
      mostrarTela('telaLogin');
    }

    // exibir mapa ao carregar (ap√≥s delay para renderizar tamanho corretamente)
    window.addEventListener('load', () => {
      if(!map && document.getElementById('telaMapa').classList.contains('ativa')) {
        inicializarMapa();
      }
    });

    // repintar mapa quando pontos mudarem (observador simples)
    // salvando pontos em localStorage tamb√©m mant√©m sincronizado
    // (fun√ß√µes que alteram pontos j√° chamam exibirPontosNoMapa e atualizarEstatisticasRapidas)
  </script>
</body>
</html>
